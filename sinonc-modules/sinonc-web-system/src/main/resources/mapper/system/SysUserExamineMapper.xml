<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sinonc.system.mapper.SysUserExamineMapper">

    <resultMap type="SysUserExamine" id="SysUserExamineResult">
        <result property="examineId" column="examine_id"/>
        <result property="userName" column="user_name"/>
        <result property="phonenumber" column="phonenumber"/>
        <result property="password" column="password"/>
        <result property="status" column="status"/>
        <result property="examineBy" column="examine_by"/>
        <result property="examineTime" column="examine_time"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="selectSysUserExamineVo">
        select examine_id, user_name, phonenumber, password, status, examine_by, examine_time, create_by, create_time, update_by, update_time        from sys_user_examine
    </sql>

    <select id="selectSysUserExamineList" parameterType="SysUserExamine" resultMap="SysUserExamineResult">
        <include refid="selectSysUserExamineVo"/>
        <where>
            <if test="userName != null  and userName != ''">
                and user_name like concat('%', #{userName}, '%')
            </if>
            <if test="phonenumber != null  and phonenumber != ''">
                and phonenumber = #{phonenumber}
            </if>
            <if test="password != null  and password != ''">
                and password = #{password}
            </if>
            <if test="status != null  and status != ''">
                and status = #{status}
            </if>
        </where>
    </select>

    <select id="selectSysUserExamineById" parameterType="Long" resultMap="SysUserExamineResult">
        <include refid="selectSysUserExamineVo"/>
        where examine_id = #{examineId}
    </select>

    <insert id="insertSysUserExamine" parameterType="SysUserExamine" useGeneratedKeys="true"
            keyProperty="examineId">
        insert into sys_user_examine
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userName != null">user_name,
            </if>
            <if test="phonenumber != null">phonenumber,
            </if>
            <if test="password != null">password,
            </if>
            <if test="status != null">status,
            </if>
            <if test="examineBy != null">examine_by,
            </if>
            <if test="examineTime != null">examine_time,
            </if>
            <if test="createBy != null">create_by,
            </if>
            <if test="createTime != null">create_time,
            </if>
            <if test="updateBy != null">update_by,
            </if>
            <if test="updateTime != null">update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userName != null">#{userName},
            </if>
            <if test="phonenumber != null">#{phonenumber},
            </if>
            <if test="password != null">#{password},
            </if>
            <if test="status != null">#{status},
            </if>
            <if test="examineBy != null">#{examineBy},
            </if>
            <if test="examineTime != null">#{examineTime},
            </if>
            <if test="createBy != null">#{createBy},
            </if>
            <if test="createTime != null">#{createTime},
            </if>
            <if test="updateBy != null">#{updateBy},
            </if>
            <if test="updateTime != null">#{updateTime},
            </if>
        </trim>
    </insert>

    <update id="updateSysUserExamine" parameterType="SysUserExamine">
        update sys_user_examine
        <trim prefix="SET" suffixOverrides=",">
            <if test="userName != null">user_name =
                #{userName},
            </if>
            <if test="phonenumber != null">phonenumber =
                #{phonenumber},
            </if>
            <if test="password != null">password =
                #{password},
            </if>
            <if test="status != null">status =
                #{status},
            </if>
            <if test="examineBy != null">examine_by =
                #{examineBy},
            </if>
             <if test="examineTime != null">examine_time =
                #{examineTime},
            </if>
            <if test="createBy != null">create_by =
                #{createBy},
            </if>
            <if test="createTime != null">create_time =
                #{createTime},
            </if>
            <if test="updateBy != null">update_by =
                #{updateBy},
            </if>
            <if test="updateTime != null">update_time =
                #{updateTime},
            </if>
        </trim>
        where examine_id = #{examineId}
    </update>

    <delete id="deleteSysUserExamineById" parameterType="Long">
        delete
        from sys_user_examine where examine_id = #{examineId}
    </delete>

    <delete id="deleteSysUserExamineByIds" parameterType="String">
        delete from sys_user_examine where examine_id in
        <foreach item="examineId" collection="array" open="(" separator="," close=")">
            #{examineId}
        </foreach>
    </delete>

    <select id="selectSysUserExamineByPhone" parameterType="string" resultMap="SysUserExamineResult">
        <include refid="selectSysUserExamineVo"/>
        where phonenumber = #{phone}
    </select>


</mapper>
