<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sinonc.base.mapper.AreaCodeMapper">

    <resultMap type="com.sinonc.base.api.domain.AreaCode" id="AreaCodeResult">
        <result property="code" column="code"/>
        <result property="name" column="name"/>
        <result property="level" column="level"/>
        <result property="pcode" column="pcode"/>
    </resultMap>

    <sql id="selectAreaCodeVo">
        select code, name, level, pcode
        from area_code
    </sql>

    <select id="selectAreaCodeList" parameterType="com.sinonc.base.api.domain.AreaCode" resultMap="AreaCodeResult">
        <include refid="selectAreaCodeVo"/>
        <where>
            <if test="name != null  and name != ''">and name like concat('%', #{name}, '%')</if>
            <if test="level != null ">and level = #{level}</if>
            <if test="pcode != null ">and pcode = #{pcode}</if>
        </where>
    </select>


    <select id="selectAreaCodeListLike" parameterType="com.sinonc.base.api.domain.AreaCode" resultMap="AreaCodeResult">
        <include refid="selectAreaCodeVo"/>
        <where>
            <if test="name != null  and name != ''">and code like concat(#{name}, '%')</if>
        </where>
    </select>

    <select id="selectAreaCodeById" parameterType="Long" resultMap="AreaCodeResult">
        <include refid="selectAreaCodeVo"/>
        where code = #{code}
    </select>

    <insert id="insertAreaCode" parameterType="com.sinonc.base.api.domain.AreaCode">
        insert into area_code
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="code != null">code,</if>
            <if test="name != null and name != ''">name,</if>
            <if test="level != null">level,</if>
            <if test="pcode != null">pcode,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="code != null">#{code},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="level != null">#{level},</if>
            <if test="pcode != null">#{pcode},</if>
        </trim>
    </insert>

    <update id="updateAreaCode" parameterType="com.sinonc.base.api.domain.AreaCode">
        update area_code
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="level != null">level = #{level},</if>
            <if test="pcode != null">pcode = #{pcode},</if>
        </trim>
        where code = #{code}
    </update>

    <delete id="deleteAreaCodeById" parameterType="Long">
        delete
        from area_code
        where code = #{code}
    </delete>

    <delete id="deleteAreaCodeByIds" parameterType="String">
        delete from area_code where code in
        <foreach item="code" collection="array" open="(" separator="," close=")">
            #{code}
        </foreach>
    </delete>

    <select id="selectParentByCodeLevel"  resultMap="AreaCodeResult">
        SELECT t1.codestr as `code`,t1.lv as level,name as name,pcode as pcode FROM
            (SELECT CONCAT(CODE,'') AS codestr,LEVEL AS lv,`name`,`pcode` FROM area_code) t1
        WHERE t1.codestr LIKE #{code} AND lv = #{level} order by t1.codestr asc limit 1;
    </select>

</mapper>
