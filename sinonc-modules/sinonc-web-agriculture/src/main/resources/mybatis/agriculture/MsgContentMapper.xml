<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sinonc.agriculture.mapper.MsgContentMapper">
    <resultMap id="BaseResultMap" type="com.sinonc.agriculture.domain.MsgContent">
        <id column="msg_id" jdbcType="BIGINT" property="msgId"/>
        <result column="session_id" jdbcType="VARCHAR" property="sessionId"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="from_member_id" jdbcType="BIGINT" property="fromMemberId"/>
        <result column="to_member_id" jdbcType="BIGINT" property="toMemberId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
    </resultMap>
    <sql id="Base_Column_List">
        msg_id, session_id, content, `type`, from_member_id, to_member_id, create_time, update_time,
    `status`
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from msg_content
        where msg_id = #{msgId,jdbcType=BIGINT}
    </select>
    <select id="selectBySessionId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from msg_content where session_id = #{value} order by create_time desc
    </select>

    <select id="selectBySessionIdLatest" resultType="com.sinonc.agriculture.domain.MsgContent">
        select
        <include refid="Base_Column_List"/>
        from msg_content where session_id = #{sessionId}
        ORDER BY create_time desc  LIMIT 1
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from msg_content
        where msg_id = #{msgId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="msg_id" keyProperty="msgId" parameterType="com.sinonc.agriculture.domain.MsgContent"
            useGeneratedKeys="true">
        insert into msg_content (session_id, content, `type`,
                                 from_member_id, to_member_id, create_time,
                                 update_time, `status`)
        values (#{sessionId,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER},
                #{fromMemberId,jdbcType=BIGINT}, #{toMemberId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP},
                #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="msg_id" keyProperty="msgId"
            parameterType="com.sinonc.agriculture.domain.MsgContent" useGeneratedKeys="true">
        insert into msg_content
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sessionId != null">
                session_id,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="type != null">
                `type`,
            </if>
            <if test="fromMemberId != null">
                from_member_id,
            </if>
            <if test="toMemberId != null">
                to_member_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="status != null">
                `status`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="sessionId != null">
                #{sessionId,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="fromMemberId != null">
                #{fromMemberId,jdbcType=BIGINT},
            </if>
            <if test="toMemberId != null">
                #{toMemberId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.sinonc.agriculture.domain.MsgContent">
        update msg_content
        <set>
            <if test="sessionId != null">
                session_id = #{sessionId,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                `type` = #{type,jdbcType=INTEGER},
            </if>
            <if test="fromMemberId != null">
                from_member_id = #{fromMemberId,jdbcType=BIGINT},
            </if>
            <if test="toMemberId != null">
                to_member_id = #{toMemberId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where msg_id = #{msgId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.sinonc.agriculture.domain.MsgContent">
        update msg_content
        set session_id     = #{sessionId,jdbcType=VARCHAR},
            content        = #{content,jdbcType=VARCHAR},
            `type`         = #{type,jdbcType=INTEGER},
            from_member_id = #{fromMemberId,jdbcType=BIGINT},
            to_member_id   = #{toMemberId,jdbcType=BIGINT},
            create_time    = #{createTime,jdbcType=TIMESTAMP},
            update_time    = #{updateTime,jdbcType=TIMESTAMP},
            `status`       = #{status,jdbcType=INTEGER}
        where msg_id = #{msgId,jdbcType=BIGINT}
    </update>
</mapper>